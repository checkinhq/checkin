// Code generated by protoc-gen-go. DO NOT EDIT.
// source: checkin/checkin/v1alpha/checkin.proto

/*
Package checkin is a generated protocol buffer package.

It is generated from these files:
	checkin/checkin/v1alpha/checkin.proto

It has these top-level messages:
	CheckinRequest
*/
package checkin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import checkin_protobuf "github.com/checkinhq/checkin/apis/checkin/protobuf"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckinRequest struct {
	Date         string `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	Previous     string `protobuf:"bytes,2,opt,name=previous" json:"previous,omitempty"`
	GoalsReached bool   `protobuf:"varint,3,opt,name=goals_reached,json=goalsReached" json:"goals_reached,omitempty"`
	Next         string `protobuf:"bytes,4,opt,name=next" json:"next,omitempty"`
	Blockers     string `protobuf:"bytes,5,opt,name=blockers" json:"blockers,omitempty"`
}

func (m *CheckinRequest) Reset()                    { *m = CheckinRequest{} }
func (m *CheckinRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckinRequest) ProtoMessage()               {}
func (*CheckinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckinRequest) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *CheckinRequest) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *CheckinRequest) GetGoalsReached() bool {
	if m != nil {
		return m.GoalsReached
	}
	return false
}

func (m *CheckinRequest) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *CheckinRequest) GetBlockers() string {
	if m != nil {
		return m.Blockers
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckinRequest)(nil), "checkin.checkin.v1alpha.CheckinRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Checkin service

type CheckinClient interface {
	Checkin(ctx context.Context, in *CheckinRequest, opts ...grpc.CallOption) (*checkin_protobuf.Empty, error)
}

type checkinClient struct {
	cc *grpc.ClientConn
}

func NewCheckinClient(cc *grpc.ClientConn) CheckinClient {
	return &checkinClient{cc}
}

func (c *checkinClient) Checkin(ctx context.Context, in *CheckinRequest, opts ...grpc.CallOption) (*checkin_protobuf.Empty, error) {
	out := new(checkin_protobuf.Empty)
	err := grpc.Invoke(ctx, "/checkin.checkin.v1alpha.Checkin/Checkin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Checkin service

type CheckinServer interface {
	Checkin(context.Context, *CheckinRequest) (*checkin_protobuf.Empty, error)
}

func RegisterCheckinServer(s *grpc.Server, srv CheckinServer) {
	s.RegisterService(&_Checkin_serviceDesc, srv)
}

func _Checkin_Checkin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckinServer).Checkin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkin.checkin.v1alpha.Checkin/Checkin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckinServer).Checkin(ctx, req.(*CheckinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Checkin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkin.checkin.v1alpha.Checkin",
	HandlerType: (*CheckinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Checkin",
			Handler:    _Checkin_Checkin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkin/checkin/v1alpha/checkin.proto",
}

func init() { proto.RegisterFile("checkin/checkin/v1alpha/checkin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0xce, 0x48, 0x4d,
	0xce, 0xce, 0xcc, 0xd3, 0x87, 0xd1, 0x65, 0x86, 0x89, 0x39, 0x05, 0x19, 0x89, 0x30, 0xbe, 0x5e,
	0x41, 0x51, 0x7e, 0x49, 0xbe, 0x90, 0x38, 0x8c, 0x0b, 0xa3, 0xa1, 0xca, 0xa4, 0x64, 0x60, 0xfa,
	0xc0, 0xea, 0x92, 0x4a, 0xd3, 0xf4, 0x53, 0x73, 0x0b, 0x4a, 0x2a, 0x21, 0xda, 0x94, 0xa6, 0x32,
	0x72, 0xf1, 0x39, 0x43, 0x14, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1,
	0xa4, 0x24, 0x96, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x52, 0x5c,
	0x1c, 0x05, 0x45, 0xa9, 0x65, 0x99, 0xf9, 0xa5, 0xc5, 0x12, 0x4c, 0x60, 0x71, 0x38, 0x5f, 0x48,
	0x99, 0x8b, 0x37, 0x3d, 0x3f, 0x31, 0xa7, 0x38, 0xbe, 0x28, 0x35, 0x31, 0x39, 0x23, 0x35, 0x45,
	0x82, 0x59, 0x81, 0x51, 0x83, 0x23, 0x88, 0x07, 0x2c, 0x18, 0x04, 0x11, 0x03, 0x19, 0x9a, 0x97,
	0x5a, 0x51, 0x22, 0xc1, 0x02, 0x31, 0x14, 0xc4, 0x06, 0x19, 0x9a, 0x94, 0x93, 0x9f, 0x9c, 0x9d,
	0x5a, 0x54, 0x2c, 0xc1, 0x0a, 0x31, 0x14, 0xc6, 0x37, 0x0a, 0xe3, 0x62, 0x87, 0x3a, 0x4b, 0xc8,
	0x1b, 0xc1, 0x54, 0xd7, 0xc3, 0xe1, 0x4b, 0x3d, 0x54, 0x3f, 0x48, 0x89, 0xeb, 0xa1, 0x84, 0x4e,
	0x52, 0x69, 0x9a, 0x9e, 0x2b, 0xc8, 0xd7, 0x4e, 0x9c, 0x51, 0xec, 0x50, 0x99, 0x24, 0x36, 0xb0,
	0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x99, 0x88, 0x78, 0xa7, 0x61, 0x01, 0x00, 0x00,
}
